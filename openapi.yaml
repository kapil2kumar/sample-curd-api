openapi: 3.0.3
info:
  title: Choreo Samples - Product Stock List - Nodejs REST API
  description: >-
    This is a sample API specification for a simple product stock list application with in-memory cache
    written in Nodejs
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Choreo
  url: https://choreo.dev
servers:
  - url: http://localhost:8080
tags:
  - name: products
    description: In-memory product list cache API
paths:
  /product/stock:
    summary: List all Products
    get:
      summary: List all products
      operationId: ListAllProducts
      tags:
        - products
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfKeyValue"
    post:
      summary: Insert a new products
      operationId: SetNewProduct
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid request body
      tags:
        - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyValue"
    put:
      summary: Update product stock
      operationId: UpdateProduct
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid request body
      tags:
        - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdProductAndStock"
  /product/stock/{IdProduct}:
    summary: Get products by IdProduct
    get:
      tags:
        - products
      summary: Get products by IdProduct
      operationId: GetProductByIdProduct
      parameters:
        - name: IdProduct
          in: path
          description: IdProduct of products to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValue"
        "404":
          description: IdProduct not found
  /healthz:
    summary: Healthcheck endpoint
    get:
      summary: Healthcheck
      operationId: Healthcheck
      responses:
        "200":
          description: Healthy response
components:
  schemas:
    Key:
      type: object
      properties:
        IdProduct:
          type: string
          example: "my-IdProduct"
    IdProductAndStock:
      type: object
      required:
        - IdProduct
        - Stock
      properties:
        IdProduct:
          type: number
          example: 123
        Stock:
          type: number
          example: 1000
    KeyValue:
      type: object
      required:
        - IdProduct
        - NameProduct
        - Stock
      properties:
        IdProduct:
          type: number
          example: 123
        NameProduct:
          type: string
          example: "IPhone 15"
        Stock:
          type: number
          example: 1000
    ArrayOfKeyValue:
      type: array
      items:
        minItems: 0
        type: object
        required:
          - IdProduct
          - NameProduct
          - Stock
        properties:
          IdProduct:
            type: number
            example: 123
          NameProduct:
            type: string
            example: "IPhone 15"
          Stock:
            type: number
            example: 1000
    StringArray:
      type: array
      items:
        type: string
